country_une_data <- read.csv("Real PS3 Data Men.csv")
country_seas_data <- read.csv("Real PS3 Data M seas.csv")
bel_data <- filter(country_une_data, GEO=="Belgium")
bel_seas <- filter(country_seas_data, GEO=="Belgium")
mer_data_BM <- inner_join(bel_data,bel_seas, by=c("TIME", "Value"))
View(mer_data_BM)
mer_data_BM <- inner_join(bel_data,bel_seas, by=c("TIME"))
View(mer_data_BM)
mer_data_BM <- select(mer_data_BM,TIME)
#A: The Labour Market
#Countries: Austria Denmark Germany Belgium
library(zoo)
library(forecast)
library(tidyverse)
library(ggplot2)
library(seasonal)
rm(list = ls())
setwd("C:/Users/gauta/Documents")
country_une_data <- read.csv("Real PS3 Data Men.csv")
country_seas_data <- read.csv("Real PS3 Data M seas.csv")
bel_data <- filter(country_une_data, GEO=="Belgium")
bel_seas <- filter(country_seas_data, GEO=="Belgium")
mer_data_BM <- inner_join(bel_data,bel_seas, by=c("TIME"))
View(mer_data_BM)
mer_data_BM <- select(mer_data_BM,TIME,Value.x,Value.y)
View(mer_data_BM)
mer_data_BM <- mutate(mer_data_BM, truedate=as.yearmon(TIME,"%Y%b"))
View(mer_data_BM)
mer_data_BM <- select(mer_data_BM,truedate,Value.x,Value.y)
View(mer_data_BM)
ggplot(mer_data_BM, aes(x=truedate,y=Value.x$Value.y, group=1))+geom_line
#A: The Labour Market
#Countries: Austria Denmark Germany Belgium
library(zoo)
library(forecast)
library(tidyverse)
library(ggplot2)
library(seasonal)
rm(list = ls())
setwd("C:/Users/gauta/Documents")
country_une_data <- read.csv("Real PS3 Data Men.csv")
country_seas_data <- read.csv("Real PS3 Data M seas.csv")
bel_data <- filter(country_une_data, GEO=="Belgium")
bel_seas <- filter(country_seas_data, GEO=="Belgium")
mer_data_BM <- inner_join(bel_data,bel_seas, by=c("TIME"))
mer_data_BM <- mutate(mer_data_BM, truedate=as.yearmon(TIME,"%Y%b"))
mer_data_BM <- select(mer_data_BM,truedate,Value.x,Value.y)
ggplot(mer_data_BM, aes(x=truedate,y=Value.x$Value.y, group=1))+geom_line
#A: The Labour Market
#Countries: Austria Denmark Germany Belgium
library(zoo)
library(forecast)
library(tidyverse)
library(ggplot2)
library(seasonal)
rm(list = ls())
setwd("C:/Users/gauta/Documents")
country_une_data <- read.csv("Real PS3 Data Men.csv")
country_seas_data <- read.csv("Real PS3 Data M seas.csv")
bel_data <- filter(country_une_data, GEO=="Belgium")
bel_seas <- filter(country_seas_data, GEO=="Belgium")
mer_data_BM <- inner_join(bel_data,bel_seas, by=c("TIME"))
mer_data_BM <- mutate(mer_data_BM, truedate=as.yearmon(TIME,"%Y%b"))
mer_data_BM <- select(mer_data_BM,truedate,Value.x,Value.y)
ggplot(mer_data_BM, aes(x=truedate,y=Value.x, group=1))+geom_line
#A: The Labour Market
#Countries: Austria Denmark Germany Belgium
library(zoo)
library(forecast)
library(tidyverse)
library(ggplot2)
library(seasonal)
rm(list = ls())
setwd("C:/Users/gauta/Documents")
country_une_data <- read.csv("Real PS3 Data Men.csv")
country_seas_data <- read.csv("Real PS3 Data M seas.csv")
bel_data <- filter(country_une_data, GEO=="Belgium")
bel_seas <- filter(country_seas_data, GEO=="Belgium")
mer_data_BM <- inner_join(bel_data,bel_seas, by=c("TIME"))
mer_data_BM <- mutate(mer_data_BM, truedate=as.yearmon(TIME,"%Y%b"))
mer_data_BM <- select(mer_data_BM,truedate,Value.x,Value.y)
ggplot(mer_data_BM, aes(x=truedate,y=Value.x, group=1))+geom_line()
ggplot(mer_data_BM, aes(x=truedate,y=Value.x$Value.y, group=1))+geom_line()
ggplot(bel_data) +geom_line(aes(x=truedate, y=Value.x))
bel_data <- filter(country_une_data, GEO=="Belgium")
bel_seas <- filter(country_seas_data, GEO=="Belgium")
mer_data_BM <- inner_join(bel_data,bel_seas, by=c("TIME"))
mer_data_BM <- mutate(mer_data_BM, truedate=as.yearmon(TIME,"%Y%b"))
mer_data_BM <- select(mer_data_BM,truedate,Value.x,Value.y)
ggplot(mer_data_BM, aes(x=truedate,y=Value.x, group=1))+geom_line(x=truedate)
ggplot(bel_data) +geom_line(aes(x=truedate, y=Value.x))
bel_seas <- filter(country_seas_data, GEO=="Belgium")
mer_data_BM <- inner_join(bel_data,bel_seas, by=c("TIME"))
mer_data_BM <- mutate(mer_data_BM, truedate=as.yearmon(TIME,"%Y%b"))
mer_data_BM <- select(mer_data_BM,truedate,Value.x,Value.y)
ggplot(bel_data) +geom_line(aes(x=truedate, y=Value.x))
View(mer_data_BM)
ggplot(bel_data, aes(x=truedate,y=Value.x)+geom_line
bel_data <- filter(country_une_data, GEO=="Belgium")
bel_seas <- filter(country_seas_data, GEO=="Belgium")
mer_data_BM <- inner_join(bel_data,bel_seas, by=c("TIME"))
mer_data_BM <- mutate(mer_data_BM, truedate=as.yearmon(TIME,"%Y%b"))
mer_data_BM <- select(mer_data_BM,truedate,Value.x,Value.y)
ggplot(bel_data, aes(x=truedate,y=Value.x)+geom_line
rm(list = ls())
rm(list = ls())
ggplot(bel_data, aes(x=truedate,y=Value.x)+geom_line()
#A: The Labour Market
#Countries: Austria Denmark Germany Belgium
library(zoo)
library(forecast)
library(tidyverse)
library(ggplot2)
library(seasonal)
rm(list = ls())
setwd("C:/Users/gauta/Documents")
country_une_data <- read.csv("Real PS3 Data Men.csv")
country_seas_data <- read.csv("Real PS3 Data M seas.csv")
bel_data <- filter(country_une_data, GEO=="Belgium")
bel_seas <- filter(country_seas_data, GEO=="Belgium")
mer_data_BM <- inner_join(bel_data,bel_seas, by=c("TIME"))
mer_data_BM <- mutate(mer_data_BM, truedate=as.yearmon(TIME,"%Y%b"))
mer_data_BM <- select(mer_data_BM,truedate,Value.x,Value.y)
ggplot(bel_data, aes(x=truedate,y=Value.x)+geom_line()
ggplot(mer_data_BM, aes(x=truedate,y=Value.x, group=1))+geom_line
ggplot(mer_data_BM, aes(x=truedate,y=Value.x, group=1))+geom_line()
ggplot(mer_data_BM, aes(x=truedate,y=Value.x, group=1))+geom_line()+geom_line(aes(x=truedate, y=Value.y)
setwd("C:/Users/gauta/Documents")
country_une_data <- read.csv("Real PS3 Data Men.csv")
country_seas_data <- read.csv("Real PS3 Data M seas.csv")
bel_data <- filter(country_une_data, GEO=="Belgium")
bel_seas <- filter(country_seas_data, GEO=="Belgium")
mer_data_BM <- inner_join(bel_data,bel_seas, by=c("TIME"))
mer_data_BM <- mutate(mer_data_BM, truedate=as.yearmon(TIME,"%Y%b"))
mer_data_BM <- select(mer_data_BM,truedate,Value.x,Value.y)
ggplot(mer_data_BM, aes(x=truedate,y=Value.x, group=1))+geom_line()+geom_line(aes(x=truedate, y=Value.y)
ggplot(mer_data_BM, aes(x=truedate,y=Value.x, group=1))+geom_line()+geom_line(aes(x=truedate, y=Value.y))
ggplot(mer_data_BM, aes(x=truedate,y=Value.x, group=1))+geom_line()+geom_line(aes(x=truedate, y=Value.y))
View(bel_seas)
View(mer_data_BM)
View(bel_seas)
View(mer_data_BM)
ggplot(mer_data_BM, aes(x=truedate,y=Value.x, group=1))+geom_line()+geom_line(aes(x=truedate, y=Value.y, color="red"))
ggplot(mer_data_BM, aes(x=truedate,y=Value.x, group=1, xlab="Unemployment Rate (%)", ylab="Time"))+geom_line()+geom_line(aes(x=truedate, y=Value.y, color="red"))
ggplot(mer_data_BM, aes(x=truedate,y=Value.x, group=1, xlab="Unemployment Rate (%)", ylab="Time"))+geom_line()+geom_line(aes(x=truedate, y=Value.y, color="red",xlab="Unemployment Rate (%)", ylab="Time"))
#A: The Labour Market
#Countries: Austria Denmark Germany Belgium
library(zoo)
library(forecast)
library(tidyverse)
library(ggplot2)
library(seasonal)
rm(list = ls())
setwd("C:/Users/gauta/Documents")
country_une_data <- read.csv("Real PS3 Data Men.csv")
country_seas_data <- read.csv("Real PS3 Data M seas.csv")
bel_data <- filter(country_une_data, GEO=="Belgium")
bel_seas <- filter(country_seas_data, GEO=="Belgium")
mer_data_BM <- inner_join(bel_data,bel_seas, by=c("TIME"))
mer_data_BM <- mutate(mer_data_BM, truedate=as.yearmon(TIME,"%Y%b"))
mer_data_BM <- select(mer_data_BM,truedate,Value.x,Value.y)
ggplot(mer_data_BM, aes(x=truedate,y=Value.x, group=1, xlab="Unemployment Rate (%)", ylab="Time"))+geom_line()+geom_line(aes(x=truedate, y=Value.y, color="red",xlab="Unemployment Rate (%)", ylab="Time"))
ggplot(mer_data_BM, aes(x=truedate,y=Value.x, group=1,))+geom_line()+geom_line(aes(x=truedate, y=Value.y, color="red"))+labs(x="Time",y="Unemployment Rate (%)")
ggplot(mer_data_BM, aes(x=truedate,y=Value.x, group=1,))+geom_line()+geom_line(aes(x=truedate, y=Value.y, color="seasonally adjusted"))+labs(x="Time",y="Unemployment Rate (%)")
ggplot(mer_data_BM, aes(x=truedate,y=Value.x, group=1,))+geom_line()+geom_line(aes(x=truedate, y=Value.y, color="seasonally adjusted"))+labs(x="Time",y="Unemployment Rate (%)")+theme_classic()
#A: The Labour Market
#Countries: Austria Denmark Germany Belgium
install.packages("ggthemes")
ggplot(mer_data_BM, aes(x=truedate,y=Value.x, group=1,))+geom_line()+geom_line(aes(x=truedate, y=Value.y, color="seasonally adjusted"))+labs(x="Time",y="Unemployment Rate (%)")+theme_economist()
library(ggthemes)
library(zoo)
library(forecast)
library(tidyverse)
library(ggplot2)
library
rm(list = ls())
setwd("C:/Users/gauta/Documents")
country_une_data <- read.csv("Real PS3 Data Men.csv")
country_seas_data <- read.csv("Real PS3 Data M seas.csv")
bel_data <- filter(country_une_data, GEO=="Belgium")
bel_seas <- filter(country_seas_data, GEO=="Belgium")
mer_data_BM <- inner_join(bel_data,bel_seas, by=c("TIME"))
mer_data_BM <- mutate(mer_data_BM, truedate=as.yearmon(TIME,"%Y%b"))
mer_data_BM <- select(mer_data_BM,truedate,Value.x,Value.y)
ggplot(mer_data_BM, aes(x=truedate,y=Value.x, group=1,))+geom_line()+geom_line(aes(x=truedate, y=Value.y, color="seasonally adjusted"))+labs(x="Time",y="Unemployment Rate (%)")+theme_economist()
BM_graph <- ggplot(mer_data_BM, aes(x=truedate,y=Value.x, group=1,))
BM_graph <- ggplot(mer_data_BM, aes(x=truedate,y=Value.x, group=1,))%>%
geom_line()+geom_line(aes(x=truedate, y=Value.y, color="seasonally adjusted"))%>%
+labs(x="Time",y="Unemployment Rate (%)")+theme_economist()
BM_graph <- ggplot(mer_data_BM, aes(x=truedate,y=Value.x, group=1,))+
geom_line()+geom_line(aes(x=truedate, y=Value.y, color="seasonally adjusted"))+
+labs(x="Time",y="Unemployment Rate (%)")+theme_economist()
BM_graph <- ggplot(mer_data_BM, aes(x=truedate,y=Value.x, group=1,))+ geom_line()+geom_line(aes(x=truedate, y=Value.y, color="seasonally adjusted"))+labs(x="Time",y="Unemployment Rate (%)")+theme_economist()
?scale_y_continuous
BM_graph <- ggplot(mer_data_BM, aes(x=truedate,y=Value.x, group=1,))+ geom_line()+geom_line(aes(x=truedate, y=Value.y, color="seasonally adjusted"))+labs(x="Time",y="Unemployment Rate (%)")+theme_economist()+scale_y_continuous(minor_breaks = "1")
BM_graph <- ggplot(mer_data_BM, aes(x=truedate,y=Value.x, group=1,))+ geom_line()+geom_line(aes(x=truedate, y=Value.y, color="seasonally adjusted"))+labs(x="Time",y="Unemployment Rate (%)")+theme_economist()+scale_y_continuous(minor_breaks = "1")
#A: The Labour Market
#Countries: Austria Denmark Germany Belgium
library(ggthemes)
library(zoo)
library(forecast)
library(tidyverse)
library(ggplot2)
library
rm(list = ls())
setwd("C:/Users/gauta/Documents")
country_une_data <- read.csv("Real PS3 Data Men.csv")
country_seas_data <- read.csv("Real PS3 Data M seas.csv")
bel_data <- filter(country_une_data, GEO=="Belgium")
bel_seas <- filter(country_seas_data, GEO=="Belgium")
mer_data_BM <- inner_join(bel_data,bel_seas, by=c("TIME"))
mer_data_BM <- mutate(mer_data_BM, truedate=as.yearmon(TIME,"%Y%b"))
mer_data_BM <- select(mer_data_BM,truedate,Value.x,Value.y)
BM_graph <- ggplot(mer_data_BM, aes(x=truedate,y=Value.x, group=1,))+ geom_line()+geom_line(aes(x=truedate, y=Value.y, color="seasonally adjusted"))+labs(x="Time",y="Unemployment Rate (%)")+theme_economist()+scale_y_continuous(minor_breaks = "1")
BM_graph <- ggplot(mer_data_BM, aes(x=truedate,y=Value.x, group=1,))+ geom_line()+geom_line(aes(x=truedate, y=Value.y, color="seasonally adjusted"))+labs(x="Time",y="Unemployment Rate (%)")+theme_economist()+scale_y_continuous(limits = c(1,2,3,4,5,6))
BM_graph <- ggplot(mer_data_BM, aes(x=truedate,y=Value.x, group=1,))+ geom_line()+geom_line(aes(x=truedate, y=Value.y, color="seasonally adjusted"))+labs(x="Time",y="Unemployment Rate (%)")+theme_economist()+ylim(0,10)
BM_graph <- ggplot(mer_data_BM, aes(x=truedate,y=Value.x, group=1,))+ geom_line()+geom_line(aes(x=truedate, y=Value.y, color="seasonally adjusted"))+labs(x="Time",y="Unemployment Rate (%)")+theme_economist()
BM_graph <- ggplot(mer_data_BM, aes(x=truedate,y=Value.x, group=1,))+ geom_line()+geom_line(aes(x=truedate, y=Value.y, color="seasonally adjusted"))+labs(x="Time",y="Unemployment Rate (%)")+theme_economist()+ylim(0,5)
BM_graph <- ggplot(mer_data_BM, aes(x=truedate,y=Value.x, group=1,))+ geom_line()+geom_line(aes(x=truedate, y=Value.y, color="seasonally adjusted"))+labs(x="Time",y="Unemployment Rate (%)")+theme_economist()+scale_y_continuous(breaks=seq(0,1,2,3,4,5,6,7,8,9,10)
BM_graph <- ggplot(mer_data_BM, aes(x=truedate,y=Value.x, group=1,))+ geom_line()+geom_line(aes(x=truedate, y=Value.y, color="seasonally adjusted"))+labs(x="Time",y="Unemployment Rate (%)")+theme_economist()+scale_y_continuous(breaks=seq(0,1,2,3,4,5,6,7,8,9,10))
#A: The Labour Market
#Countries: Austria Denmark Germany Belgium
library(ggthemes)
library(zoo)
library(forecast)
library(tidyverse)
library(ggplot2)
library
rm(list = ls())
setwd("C:/Users/gauta/Documents")
country_une_data <- read.csv("Real PS3 Data Men.csv")
country_seas_data <- read.csv("Real PS3 Data M seas.csv")
bel_data <- filter(country_une_data, GEO=="Belgium")
bel_seas <- filter(country_seas_data, GEO=="Belgium")
mer_data_BM <- inner_join(bel_data,bel_seas, by=c("TIME"))
mer_data_BM <- mutate(mer_data_BM, truedate=as.yearmon(TIME,"%Y%b"))
mer_data_BM <- select(mer_data_BM,truedate,Value.x,Value.y)
BM_graph <- ggplot(mer_data_BM, aes(x=truedate,y=Value.x, group=1,))+ geom_line()+geom_line(aes(x=truedate, y=Value.y, color="seasonally adjusted"))+labs(x="Time",y="Unemployment Rate (%)")+theme_economist()+scale_y_continuous(breaks=seq(0,1,2,3,4,5,6,7,8,9,10))
BM_graph <- ggplot(mer_data_BM, aes(x=truedate,y=Value.x, group=1,))+ geom_line()+geom_line(aes(x=truedate, y=Value.y, color="seasonally adjusted"))+labs(x="Time",y="Unemployment Rate (%)")+theme_economist()+scale_y_continuous(breaks=seq(5,6,7,8))
BM_graph <- ggplot(mer_data_BM, aes(x=truedate,y=Value.x, group=1,))+ geom_line()+geom_line(aes(x=truedate, y=Value.y, color="seasonally adjusted"))+labs(x="Time",y="Unemployment Rate (%)")+theme_economist()+scale_y_continuous(breaks=seq(5,6))
#use zoo package for as.yearmon date manipulation
#tidyverse for ggplot graphing
#forecast for moving average
library(zoo)
library(tidyverse)
library(forecast)
#load the test data and plot it
rm(list = ls()) #remove everything
setwd("C:/Users/Public/Public Documents") #set working directory to Downloads
test_data <- read.csv("data_for_testing.csv")#load test data csv file
#create new variable "truedate" in date format that can be plotted
test_data <- mutate(test_data, truedate=as.yearmon(time,"%b-%y"))
#plot line chart with date on x axis and unemployment rate on y axis
ggplot(test_data, aes(x=truedate,y=unemployment_rate))+geom_line()+labs(x="Date",y="Unemployment rate (%)")
seas_adj_function <- function(){
#STEP 1: MOVING AVERAGE: identify Tt from Yt= St+Tt+Ct+Et
#store unempoyment rate as a variable
unemployment_rate <- test_data$unemployment_rate
#compute moving average with 13 months (so 6 on each side of centre)
trend_level <- ma(unemployment_rate,order = 13)
#trend_level= Tt
#STEP 2: Extract trend level (to leave St+Ct+Et)
residual_1 <- unemployment_rate-trend_level
residual_1
#STEP 3:  Take the moving average of each month's resiudal over years to gain the 'monthly effect'
#want to put all the month vectors together into one vector with length 429
empty_vector <- rep((NA), length(residual_1)) #make a vector that just says NA for all the spaces of the effects
print(empty_vector)
#using a for loop to avoid rewriting code for every month
#first iteration will print the residual for 12n+1 (January), second iteration will print the residual for 12n+2 (February) etc
for (s in 1:12) {
#take the value of every residual in the sequence '12n+s', where s is the integer value of a month (e.g June=6)
month <- residual_1[(seq(s,length(residual_1), by=12))]
#create a moving average over these monthly residuals
seasonal_effect <-ma(month, order = 3)
#store the moving average of the residuals (the seasonal effect) in the empty vector (so all monthly values are stored in the same vector)
empty_vector [(seq(s,length(residual_1), by=12))] <- seasonal_effect
}
empty_vector
#STEP 4: subtract St from Yt to give seasonally adjusted data
adj_data <- unemployment_rate- empty_vector
#Step 5: Repeat x times
#ma(seas_adj_data, order = 13)
return(adj_data)
}
seas_adj_function()
rm(list = ls())
setwd("C:/Users/gauta/Documents")
country_une_data <- read.csv("Real PS3 Data Men.csv")
country_seas_data <- read.csv("Real PS3 Data M seas.csv")
library(ggthemes)
library(zoo)
library(forecast)
library(tidyverse)
library(ggplot2)
library
rm(list = ls())
setwd("C:/Users/gauta/Documents")
country_une_data <- read.csv("Real PS3 Data Men.csv")
country_seas_data <- read.csv("Real PS3 Data M seas.csv")
bel_data <- filter(country_une_data, GEO=="Belgium")
bel_seas <- filter(country_seas_data, GEO=="Belgium")
mer_data_BM <- inner_join(bel_data,bel_seas, by=c("TIME"))
mer_data_BM <- mutate(mer_data_BM, truedate=as.yearmon(TIME,"%Y%b"))
mer_data_BM <- select(mer_data_BM,truedate,Value.x,Value.y)
BM_graph <- ggplot(mer_data_BM, aes(x=truedate,y=Value.x, group=1,))+ geom_line()+geom_line(aes(x=truedate, y=Value.y, color="seasonally adjusted"))+labs(x="Time",y="Unemployment Rate (%)")+theme_economist()+scale_y_continuous(breaks=seq(5,6))
rm(list = ls())
library(seasonal)
plot(USAccDeaths)
sa_series <- seas(AirPassengers,X11())
plot(USAccDeaths)
lines(final(sa_series),col=2)
#use zoo package for as.yearmon date manipulation
#tidyverse for ggplot graphing
#forecast for moving average
library(zoo)
library(tidyverse)
library(forecast)
#load the test data and plot it
rm(list = ls()) #remove everything
setwd("C:/Users/Public/Public Documents") #set working directory to Downloads
test_data <- read.csv("data_for_testing.csv")#load test data csv file
#create new variable "truedate" in date format that can be plotted
test_data <- mutate(test_data, truedate=as.yearmon(time,"%b-%y"))
#plot line chart with date on x axis and unemployment rate on y axis
ggplot(test_data, aes(x=truedate,y=unemployment_rate))+geom_line()+labs(x="Date",y="Unemployment rate (%)")
#use zoo package for as.yearmon date manipulation
#tidyverse for ggplot graphing
#forecast for moving average
library(zoo)
library(tidyverse)
library(forecast)
#load the test data and plot it
rm(list = ls()) #remove everything
setwd("C:/Users/gauta/Documents") #set working directory to Downloads
test_data <- read.csv("data_for_testing.csv")#load test data csv file
#create new variable "truedate" in date format that can be plotted
test_data <- mutate(test_data, truedate=as.yearmon(time,"%b-%y"))
#plot line chart with date on x axis and unemployment rate on y axis
ggplot(test_data, aes(x=truedate,y=unemployment_rate))+geom_line()+labs(x="Date",y="Unemployment rate (%)")
rm(list = ls())
setwd('C:/Users/gauta/Documents/GitHub/pandemic/Data/stockdata/DataStream/data')
library(tidyverse)
library(pandas)
library(lubridate)
library(ggplot2)
stock <- read.csv('stock_ts2.csv')
stock$week <- as.Date(stock$week, format = "%d/%m/%y")
indx_list <- unique(stock$index)
##for loop generating time series by country
for(indx in indx_list){
stock_to_plot <- stock %>%
filter(index == indx)
my_plot <- ggplot(data = stock_to_plot, aes(x = week, y = rel_closingprice)) +
geom_point(colour = "blue", size = 0.5) +
geom_line(aes(group = 1), colour = "blue") +
theme_minimal() +
geom_hline(yintercept = 1, linetype = 4) +
geom_vline(xintercept = as.numeric(stock$week[9]), linetype = 4, colour = "red") +
geom_vline(xintercept = as.numeric(stock$week[10]), linetype = 4, colour = "red") +
labs(title = paste(indx, "Normalised Time Series (highlighted area is week of WHO announcement)", sep = " "), x = "Month", y = "(Weekly) Closing Price") +
geom_rect(xmin = as.numeric(stock$week[9]), xmax = as.numeric(stock$week[10]), ymin = 0, ymax = Inf, fill = "red", alpha = 0.01)
ggsave(filename = paste(indx, "_rel_time_series.png", sep = ""), plot = my_plot, path = "C:/Users/gauta/Documents/GitHub/pandemic/figures/stock_time_series/relative")
## GRAPHING DATASTREAM TIME SERIES OF EACH INDEX.
# Absolute Graphs
rm(list = ls())
setwd('C:/Users/gauta/Documents/GitHub/pandemic/Data/stockdata/DataStream/data')
library(tidyverse)
library(pandas)
library(lubridate)
library(ggplot2)
stock <- read.csv('stock_ts.csv')
stock$Week <- as.Date(stock$Week, format = "%d/%m/%y")
indx_list <- unique(stock$Index)
rm(list = ls())
setwd('C:/Users/gauta/Documents/GitHub/pandemic/Data/stockdata/DataStream/data')
library(tidyverse)
library(pandas)
library(lubridate)
library(ggplot2)
stock <- read.csv('stock_ts2.csv')
stock$week <- as.Date(stock$week, format = "%d/%m/%y")
indx_list <- unique(stock$index)
##for loop generating time series by country
for(indx in indx_list){
stock_to_plot <- stock %>%
filter(index == indx)
my_plot <- ggplot(data = stock_to_plot, aes(x = week, y = rel_closingprice)) +
geom_point(colour = "blue", size = 0.5) +
geom_line(aes(group = 1), colour = "blue") +
theme_minimal() +
geom_hline(yintercept = 1, linetype = 4) +
geom_vline(xintercept = as.numeric(stock$week[9]), linetype = 4, colour = "red") +
geom_vline(xintercept = as.numeric(stock$week[10]), linetype = 4, colour = "red") +
labs(title = paste(indx, "Normalised Time Series (highlighted area is week of WHO announcement)", sep = " "), x = "Month", y = "(Weekly) Closing Price") +
geom_rect(xmin = as.numeric(stock$week[9]), xmax = as.numeric(stock$week[10]), ymin = 0, ymax = Inf, fill = "red", alpha = 0.01)
ggsave(filename = paste(indx, "_rel_time_series.png", sep = ""), plot = my_plot, path = "C:/Users/gauta/Documents/GitHub/pandemic/figures/stock_time_series/relative")
}
rm(list = ls())
setwd('C:/Users/gauta/Documents/GitHub/pandemic/Data/stockdata/DataStream/data')
library(tidyverse)
library(pandas)
library(lubridate)
library(ggplot2)
stock <- read.csv('stock_ts2.csv')
stock$week <- as.Date(stock$week, format = "%d/%m/%y")
indx_list <- unique(stock$index)
##for loop generating time series by country
for(indx in indx_list){
stock_to_plot <- stock %>%
filter(index == indx)
my_plot <- ggplot(data = stock_to_plot, aes(x = week, y = rel_closingprice)) +
geom_point(colour = "blue", size = 0.5) +
geom_line(aes(group = 1), colour = "blue") +
theme_minimal() +
geom_hline(yintercept = 1, linetype = 4) +
geom_vline(xintercept = as.numeric(stock$week[9]), linetype = 4, colour = "red") +
geom_vline(xintercept = as.numeric(stock$week[10]), linetype = 4, colour = "red") +
labs(title = paste(indx, "Normalised Time Series (highlighted area is week of WHO announcement)", sep = " "), x = "Month", y = "(Weekly) Closing Price") +
geom_rect(xmin = as.numeric(stock$week[9]), xmax = as.numeric(stock$week[10]), ymin = 0, ymax = Inf, fill = "red", alpha = 0.01)
ggsave(filename = paste(indx, "_rel_time_series.png", sep = ""), plot = my_plot, path = "C:/Users/gauta/Documents/GitHub/pandemic/figures/stock_time_series/relative")
}
for(indx in indx_list){
stock_to_plot <- stock %>%
filter(index == indx)
my_plot <- ggplot(data = stock_to_plot, aes(x = week, y = rel_closingprice)) +
geom_point(colour = "blue", size = 0.5) +
geom_line(aes(group = 1), colour = "blue") +
theme_minimal() +
geom_vline(xintercept = as.numeric(stock$week[9]), linetype = 4, colour = "red") +
geom_vline(xintercept = as.numeric(stock$week[10]), linetype = 4, colour = "red") +
labs(title = paste(indx, "Normalised Time Series (highlighted area is week of WHO announcement)", sep = " "), x = "Month", y = "(Weekly) Closing Price") +
geom_rect(xmin = as.numeric(stock$week[9]), xmax = as.numeric(stock$week[10]), ymin = 0, ymax = Inf, fill = "red", alpha = 0.01)
ggsave(filename = paste(indx, "_rel_time_series.png", sep = ""), plot = my_plot, path = "C:/Users/gauta/Documents/GitHub/pandemic/figures/stock_time_series/relative")
}
## GRAPHING DATASTREAM TIME SERIES OF EACH INDEX.
# Absolute Graphs
rm(list = ls())
setwd('C:/Users/gauta/Documents/GitHub/pandemic/Data/stockdata/DataStream/data')
library(tidyverse)
library(pandas)
library(lubridate)
library(ggplot2)
stock <- read.csv('stock_ts.csv')
stock$Week <- as.Date(stock$Week, format = "%d/%m/%y")
indx_list <- unique(stock$Index)
##for loop generating time series by country
for(indx in indx_list){
stock_to_plot <- stock %>%
filter(Index == indx)
my_plot <- ggplot(data = stock_to_plot, aes(x = Week, y = Closing.Price)) +
geom_point(colour = "blue", size = 0.5) +
geom_line(aes(group = 1), colour = "blue") +
theme_minimal() +
geom_vline(xintercept = as.numeric(stock$Week[9]), linetype = 4, colour = "red") +
geom_vline(xintercept = as.numeric(stock$Week[10]), linetype = 4, colour = "red") +
labs(title = paste(indx, "Time Series (highlighted area is week of WHO announcement)", sep = " "), x = "Month", y = "(Weekly) Closing Price") +
geom_rect(xmin = as.numeric(stock$Week[9]), xmax = as.numeric(stock$Week[10]), ymin = 0, ymax = Inf, fill = "red", alpha = 0.01)
ggsave(filename = paste(indx, "_time_series.png", sep = ""), plot = my_plot, path = "C:/Users/gauta/Documents/GitHub/pandemic/figures/stock_time_series")
}
##facet absolute graph:
p <- ggplot(data = stock, aes(x = Week, y = Closing.Price)) +
geom_point(size = 0.001) +
facet_wrap(~ï..Country, nrow = 5, scale = "free_y") +
geom_line(aes(group = 1), colour = "blue") +
theme_minimal() +
labs(title = paste("Time Series (highlighted area is week of WHO announcement)"), x = "Month", y = "(Weekly) Closing Price") +
theme(axis.text.y = element_blank()) +
theme(axis.text.x = element_text(angle = 90)) +
geom_vline(xintercept = as.numeric(stock$Week[9]), linetype = 4, colour = "red") +
geom_vline(xintercept = as.numeric(stock$Week[10]), linetype = 4, colour = "red") +
geom_rect(xmin = as.numeric(stock$Week[9]), xmax = as.numeric(stock$Week[10]), ymin = 0, ymax = Inf, fill = "red", alpha = 0.01)
ggsave(filename = "grouped_time_series.png", plot = p, path = "C:/Users/gauta/Documents/GitHub/pandemic/figures/stock_time_series")
# Relative Graphs
rm(list = ls())
setwd('C:/Users/gauta/Documents/GitHub/pandemic/Data/stockdata/DataStream/data')
library(tidyverse)
library(pandas)
library(lubridate)
library(ggplot2)
stock <- read.csv('stock_ts2.csv')
stock$week <- as.Date(stock$week, format = "%d/%m/%y")
indx_list <- unique(stock$index)
##for loop generating time series by country
for(indx in indx_list){
stock_to_plot <- stock %>%
filter(index == indx)
my_plot <- ggplot(data = stock_to_plot, aes(x = week, y = rel_closingprice)) +
geom_point(colour = "blue", size = 0.5) +
geom_line(aes(group = 1), colour = "blue") +
theme_minimal() +
geom_hline(yintercept = 1, linetype = 4) +
geom_vline(xintercept = as.numeric(stock$week[9]), linetype = 4, colour = "red") +
geom_vline(xintercept = as.numeric(stock$week[10]), linetype = 4, colour = "red") +
labs(title = paste(indx, "Normalised Time Series (highlighted area is week of WHO announcement)", sep = " "), x = "Month", y = "(Weekly) Closing Price") +
geom_rect(xmin = as.numeric(stock$week[9]), xmax = as.numeric(stock$week[10]), ymin = 0, ymax = Inf, fill = "red", alpha = 0.01)
ggsave(filename = paste(indx, "_rel_time_series.png", sep = ""), plot = my_plot, path = "C:/Users/gauta/Documents/GitHub/pandemic/figures/stock_time_series/relative")
}
#facet relative
p <- ggplot(data = stock, aes(x = week, y = rel_closingprice)) +
geom_point(size = 0.001) +
facet_wrap(~Ã.country, nrow = 5, scale = "free_y") +
geom_line(aes(group = 1), colour = "blue") +
theme_minimal() +
labs(title = paste("Time Series (highlighted area is week of WHO announcement)"), x = "Month", y = "(Weekly) Closing Price") +
theme(axis.text.y = element_blank()) +
theme(axis.text.x = element_text(angle = 90)) +
geom_vline(xintercept = as.numeric(stock$week[9]), linetype = 4, colour = "red") +
geom_vline(xintercept = as.numeric(stock$week[10]), linetype = 4, colour = "red") +
geom_rect(xmin = as.numeric(stock$week[9]), xmax = as.numeric(stock$week[10]), ymin = 0, ymax = Inf, fill = "red", alpha = 0.01)
ggsave(filename = "rel_grouped_time_series.png", plot = p, path = "C:/Users/gauta/Documents/GitHub/pandemic/figures/stock_time_series/relative")
rm(list = ls())
